
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Service", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Service {


    /**
     * 
     * @param username
     * @return
     *     returns service.UserAddress
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchNeighbour", targetNamespace = "http://server/", className = "service.SearchNeighbour")
    @ResponseWrapper(localName = "searchNeighbourResponse", targetNamespace = "http://server/", className = "service.SearchNeighbourResponse")
    @Action(input = "http://server/Service/searchNeighbourRequest", output = "http://server/Service/searchNeighbourResponse")
    public UserAddress searchNeighbour(
        @WebParam(name = "username", targetNamespace = "")
        String username);

    /**
     * 
     * @param averageValue
     * @param parametar
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "storeMeasurement", targetNamespace = "http://server/", className = "service.StoreMeasurement")
    @ResponseWrapper(localName = "storeMeasurementResponse", targetNamespace = "http://server/", className = "service.StoreMeasurementResponse")
    @Action(input = "http://server/Service/storeMeasurementRequest", output = "http://server/Service/storeMeasurementResponse")
    public boolean storeMeasurement(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "parametar", targetNamespace = "")
        String parametar,
        @WebParam(name = "averageValue", targetNamespace = "")
        float averageValue);

    /**
     * 
     * @param port
     * @param latitude
     * @param iPaddress
     * @param username
     * @param longitude
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://server/", className = "service.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://server/", className = "service.RegisterResponse")
    @Action(input = "http://server/Service/registerRequest", output = "http://server/Service/registerResponse")
    public boolean register(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "latitude", targetNamespace = "")
        double latitude,
        @WebParam(name = "longitude", targetNamespace = "")
        double longitude,
        @WebParam(name = "IPaddress", targetNamespace = "")
        String iPaddress,
        @WebParam(name = "PORT", targetNamespace = "")
        int port);

}
